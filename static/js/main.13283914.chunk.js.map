{"version":3,"sources":["components/MessageHistory/Message/Message.js","components/MessageHistory/Response/Response.js","components/MessageHistory/Typing/Typing.js","components/MessageHistory/MessageHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Message","props","from","message","class","name","time","text","Response","Typing","className","MessageHistory","list","lenght","map","item","type","id","defaultProps","messages","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAwBeA,MArBf,SAAiBC,GAAQ,IACbC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OACI,+BACI,sBAAKC,MAAM,eAAX,UACI,uBAAMA,MAAM,oBAAZ,UAAgC,mBAAGA,MAAM,wBAA2BF,EAAKG,QACzE,sBAAMD,MAAM,oBAAZ,SAAiCD,EAAQG,UAE7C,qBAAKF,MAAM,qBAAX,SACKD,EAAQI,WCYVC,MAtBf,SAAkBP,GAAQ,IACdC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OACI,qBAAIC,MAAM,WAAV,UACI,sBAAKA,MAAM,2BAAX,UACI,sBAAMA,MAAM,oBAAZ,SAAiCD,EAAQG,OAD7C,aAEI,sBAAMF,MAAM,oBAAZ,SAAiCF,EAAKG,OACtC,mBAAGD,MAAM,uBAEb,qBAAKA,MAAM,oCAAX,SACKD,EAAQI,WCUVE,MArBf,SAAgBR,GAAQ,IACZC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OACI,+BACI,sBAAKC,MAAM,eAAX,UACI,uBAAMA,MAAM,oBAAZ,UAAgC,mBAAGA,MAAM,wBAA2BF,EAAKG,QACzE,sBAAMD,MAAM,oBAAZ,SAAiCD,EAAQG,UAE7C,qBAAKF,MAAM,SAAX,SACI,qBAAKM,UAAU,uBCP/B,SAASC,EAAeV,GAAQ,IACpBW,EAASX,EAATW,KAER,GAAoB,IAAhBA,EAAKC,QAAiBD,EAI1B,OACI,6BAEQA,EAAKE,KAAK,SAAAC,GAAI,MACK,YAAdA,EAAKC,KAAsB,cAAC,EAAD,CAAuBd,KAAMa,EAAKb,KAAMC,QAASY,GAAnCA,EAAKE,IAChC,aAAdF,EAAKC,KAAuB,cAAC,EAAD,CAAwBd,KAAMa,EAAKb,KAAMC,QAASY,GAAnCA,EAAKE,IACjD,cAAC,EAAD,CAAsBf,KAAMa,EAAKb,KAAMC,QAASY,GAAnCA,EAAKE,SAOtCN,EAAeO,aAAe,CAC1BN,KAAM,IAOKD,QC/BTQ,EAAW,CAAC,CAChBF,GAAI,cACJf,KAAM,CAAEG,KAAM,kCACdW,KAAM,WACNV,KAAM,QACNC,KAAM,kRACL,CACDU,GAAI,cACJf,KAAM,CAAEG,KAAM,wCACdW,KAAM,UACNV,KAAM,QACNC,KAAM,8bACL,CACDU,GAAI,cACJf,KAAM,CAAEG,KAAM,kCACdW,KAAM,WACNV,KAAM,QACNC,KAAM,8rBACL,CACDU,GAAI,cACJf,KAAM,CAAEG,KAAM,wCACdW,KAAM,UACNV,KAAM,QACNC,KAAM,6RACL,CACDU,GAAI,cACJf,KAAM,CAAEG,KAAM,wCACdW,KAAM,SACNV,KAAM,UAgBOc,MAZf,WACE,OACE,qBAAKV,UAAU,qBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAgBE,KAAMO,WC5BjBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.13283914.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Message(props) {\r\n    const { from, message } = props;\r\n\r\n    return (\r\n        <li>\r\n            <div class=\"message-data\">\r\n                <span class=\"message-data-name\"><i class=\"fa fa-circle online\"></i>{from.name}</span>\r\n                <span class=\"message-data-time\">{message.time}</span>\r\n            </div>\r\n            <div class=\"message my-message\">\r\n                {message.text}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nMessage.propTypes = {\r\n    from: PropTypes.object.isRequired,\r\n    message: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Message;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Response(props) {\r\n    const { from, message } = props;\r\n\r\n    return (\r\n        <li class=\"clearfix\">\r\n            <div class=\"message-data align-right\">\r\n                <span class=\"message-data-time\">{message.time}</span> &nbsp; &nbsp;\r\n                <span class=\"message-data-name\">{from.name}</span>\r\n                <i class=\"fa fa-circle me\"></i>\r\n            </div>\r\n            <div class=\"message other-message float-right\">\r\n                {message.text}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nResponse.propTypes = {\r\n    from: PropTypes.object.isRequired,\r\n    message: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Response;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Typing(props) {\r\n    const { from, message } = props;\r\n\r\n    return (\r\n        <li>\r\n            <div class=\"message-data\">\r\n                <span class=\"message-data-name\"><i class=\"fa fa-circle online\"></i>{from.name}</span>\r\n                <span class=\"message-data-time\">{message.time}</span>\r\n                </div>\r\n            <div class=\"typing\">\r\n                <div className=\"typing-point\"></div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nTyping.propTypes = {\r\n    from: PropTypes.object.isRequired,\r\n    message: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Typing;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Message from './Message/Message';\r\nimport Response from './Response/Response';\r\nimport Typing from './Typing/Typing';\r\n\r\nfunction MessageHistory(props) {\r\n    const { list } = props;\r\n\r\n    if (list.lenght === 0 || !list) {\r\n        return;\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            {\r\n                list.map( item => \r\n                    (item.type === 'message') ? <Message key={item.id} from={item.from} message={item}/> :\r\n                    (item.type === 'response') ? <Response key={item.id} from={item.from} message={item}/> :\r\n                    <Typing key={item.id} from={item.from} message={item}/>\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nMessageHistory.defaultProps = {\r\n    list: [],\r\n}\r\n\r\nMessageHistory.propTypes = {\r\n    list: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default MessageHistory;\r\n\r\n","import './App.css';\nimport MessageHistory from './components/MessageHistory/MessageHistory';\n\nconst messages = [{\n  id: 'chat-5-1090',\n  from: { name: 'Ольга' },\n  type: 'response',\n  time: '10:10',\n  text: 'Привет, Виктор. Как дела? Как идет работа над проектом?'\n}, {\n  id: 'chat-5-1091',\n  from: { name: 'Виктор' },\n  type: 'message',\n  time: '10:12',\n  text: 'Привет. Давай сегодня созвонимся. Проект практически готов, и у меня есть что показать.'\n}, {\n  id: 'chat-5-1092',\n  from: { name: 'Ольга' },\n  type: 'response',\n  time: '10:14',\n  text: 'Не уверена что сегодня получится. Не все еще в офисе. Давай уточню через час. Возникли ли какие-либо проблемы на последней стадии проекта?'\n}, {\n  id: 'chat-5-1093',\n  from: { name: 'Виктор' },\n  type: 'message',\n  time: '10:20',\n  text: 'Нет, все прошло гладко. Очень хочу показать всё команде.'\n}, {\n  id: 'chat-5-1094',\n  from: { name: 'Виктор' },\n  type: 'typing',\n  time: '10:31'\n}];\n\n\nfunction App() {\n  return (\n    <div className=\"clearfix container\">\n      <div className=\"chat\">\n        <div className=\"chat-history\">\n          <MessageHistory list={messages} />\n        </div>\n      </div>  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}